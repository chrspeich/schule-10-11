\chapter{Grafikprogrammierung mit OpenGL und C++}

OpenGL ist ein Grafik-API für die Realisierung von 3D-Objekten in einer C++-Umgebung. Der Ursprung liegt in IRIS GL von Silicon Graphics (SGI).

\section{Bestandteile von OpenGL}

\paragraph{OpenGL} Mehrere hundert Funktionen, z.B.:
\begin{itemize}\item geometrische Primitive (Punkte, Linien, Polygone…)\item Z-Buffer-Algorithmus\item Befehlsfunktionen, welche Nachrichten in den Bildspeicher übertragen und diesen verändern
\end{itemize}

\paragraph{GLUT}
\begin{itemize}
\item 3D-Verschiebungen, Rotationen, Skalierungen\item Lichtquellen\item Umgebungshelligkeit, Diffusanteil\item Texturen\item Doppelpufferung (Flüssige Animationen)
\end{itemize}

\section{Grundaufbau eines OpenGL-Programms}

\minisec{Laden der Headerdatei}

\begin{minted}{cpp}
#include<gl/glut.h>
\end{minted}

\minisec{Bereitstellung eines Fensters}

\begin{minted}{cpp}
int main(int argc, char** argv) {	glutInit(&argc, argv);	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);	glutInitWindowSize(640, 480);	glutInitWindowPosition(100, 100); // Linke obere Ecke	glutCreateWindow("Erster Versuch");		init();	glutDisplayFunc(display);	glutMainLoop();	return 0;}
\end{minted}

\minisec{Noch erforderlich}

\begin{minted}{cpp}
void init() {	glClearColor(0.0, 0.0, 1.0, 0.0);}void display() {	glClear(GL_COLOR_BUFFER_BIT);	glFlush();}
\end{minted}
